version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: adminpanel_mysql_dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: adminpanel
      MYSQL_USER: adminpanel
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data_dev:/var/lib/mysql
    networks:
      - adminpanel_network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis
  redis:
    image: redis:7-alpine
    container_name: adminpanel_redis_dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - adminpanel_network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: adminpanel_backend_dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: adminpanel
      DB_USER: adminpanel
      DB_PASSWORD: password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      # Дополнительные переменные для вашего приложения
      JWT_SECRET: your-jwt-secret-key
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/logs:/app/logs  # Для логов Winston
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - adminpanel_network
    command: npm run dev

  # Frontend (Create React App)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: adminpanel_frontend_dev
    restart: unless-stopped
    environment:
      # Create React App использует порт 3000 по умолчанию
      PORT: 3000
      # Переменные для проксирования к бэкенду
      REACT_APP_API_URL: http://localhost:3000/api
      # Отключаем автоматическое открытие браузера
      BROWSER: none
      # Включаем горячую перезагрузку
      FAST_REFRESH: true
    ports:
      - "3001:3000"  # Изменил на 3001, так как 3000 занят бэкендом
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - adminpanel_network
    depends_on:
      - backend
    stdin_open: true
    tty: true

volumes:
  mysql_data_dev:
  redis_data_dev:

networks:
  adminpanel_network:
    driver: bridge