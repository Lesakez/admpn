services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: adminpanel_mysql_dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: adminpanel
      MYSQL_USER: adminpanel
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"  # Возвращаем стандартный порт
    volumes:
      - mysql_data_dev:/var/lib/mysql
    networks:
      - adminpanel_network
    command: --default-authentication-plugin=mysql_native_password

  # Redis
  redis:
    image: redis:7-alpine
    container_name: adminpanel_redis_dev
    restart: unless-stopped
    ports:
      - "6379:6379"  # Возвращаем стандартный порт
    volumes:
      - redis_data_dev:/data
    networks:
      - adminpanel_network
    command: redis-server --appendonly yes

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: adminpanel_backend_dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: adminpanel
      DB_USER: adminpanel
      DB_PASSWORD: password
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "3000:3000"
    depends_on:
      - mysql
      - redis
    networks:
      - adminpanel_network

volumes:
  mysql_data_dev:
  redis_data_dev:

networks:
  adminpanel_network:
    driver: bridge